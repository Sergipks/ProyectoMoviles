// Generated by view binder compiler. Do not edit!
package edu.joverpenalva.proyectomoviles.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import edu.joverpenalva.proyectomoviles.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnAcceder;

  @NonNull
  public final CheckBox cbRecordar;

  @NonNull
  public final MaterialToolbar mToolbar;

  @NonNull
  public final TextInputEditText tiedLogin;

  @NonNull
  public final TextInputEditText tiedPassword;

  @NonNull
  public final TextInputLayout tilLogin;

  @NonNull
  public final TextInputLayout tilPassword;

  private ActivityLoginBinding(@NonNull CoordinatorLayout rootView, @NonNull Button btnAcceder,
      @NonNull CheckBox cbRecordar, @NonNull MaterialToolbar mToolbar,
      @NonNull TextInputEditText tiedLogin, @NonNull TextInputEditText tiedPassword,
      @NonNull TextInputLayout tilLogin, @NonNull TextInputLayout tilPassword) {
    this.rootView = rootView;
    this.btnAcceder = btnAcceder;
    this.cbRecordar = cbRecordar;
    this.mToolbar = mToolbar;
    this.tiedLogin = tiedLogin;
    this.tiedPassword = tiedPassword;
    this.tilLogin = tilLogin;
    this.tilPassword = tilPassword;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_acceder;
      Button btnAcceder = ViewBindings.findChildViewById(rootView, id);
      if (btnAcceder == null) {
        break missingId;
      }

      id = R.id.cb_recordar;
      CheckBox cbRecordar = ViewBindings.findChildViewById(rootView, id);
      if (cbRecordar == null) {
        break missingId;
      }

      id = R.id.mToolbar;
      MaterialToolbar mToolbar = ViewBindings.findChildViewById(rootView, id);
      if (mToolbar == null) {
        break missingId;
      }

      id = R.id.tied_login;
      TextInputEditText tiedLogin = ViewBindings.findChildViewById(rootView, id);
      if (tiedLogin == null) {
        break missingId;
      }

      id = R.id.tied_password;
      TextInputEditText tiedPassword = ViewBindings.findChildViewById(rootView, id);
      if (tiedPassword == null) {
        break missingId;
      }

      id = R.id.til_login;
      TextInputLayout tilLogin = ViewBindings.findChildViewById(rootView, id);
      if (tilLogin == null) {
        break missingId;
      }

      id = R.id.til_password;
      TextInputLayout tilPassword = ViewBindings.findChildViewById(rootView, id);
      if (tilPassword == null) {
        break missingId;
      }

      return new ActivityLoginBinding((CoordinatorLayout) rootView, btnAcceder, cbRecordar,
          mToolbar, tiedLogin, tiedPassword, tilLogin, tilPassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
